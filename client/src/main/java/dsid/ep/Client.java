/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package dsid.ep;

import javax.swing.*;
import java.awt.Dimension;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/*
 * Client: Classe principal que vai instanciar a GUI do cliente
 */

public class Client {
    public static void main(String[] args) {

        UIManager.put("swing.boldMetal", Boolean.FALSE);

        javax.swing.SwingUtilities.invokeLater( new Runnable() {
            public void run() {
                ClientGui gui = new ClientGui("Client Manager");
            }
        });
    }
}

/*
 * ClientGui: Aqui onde a interface gr√°fica vai ser criada
 *
 * gui: a interface grafica principal
 * CONNPANEL: onde o usuario pode conectar com o repositorio
 * INFOPANEL: onde o usuario pode pesquisar pecas no repositorio
 * SHOWPANEL: onde o usuario pode ver informacoes sobre uma determinada peca e seus subcomponentes
 * MIN_WIDTH: a largura minima para que o programa funcione
 * MIN_HEIGHT: a algura minima para que o programa funcione
 */

class ClientGui {

    private final JFrame gui;
    final static String CONNPANEL = "Server";
    final static String SHOWPANEL = "Search";
    final static String INFOPANEL = "Information";
    private String repository;
    private final int MIN_WIDTH = 600;
    private final int MIN_HEIGHT = 400;

    ClientGui(String name) {
        this.gui = new JFrame(name);
        setupFrame();
        setupMenu();
        setupPanel();
        this.gui.setVisible(true);
    }

    private void setupFrame() {
        System.err.println("Setup Frame...");
        this.gui.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.gui.setMinimumSize(new Dimension(MIN_WIDTH, MIN_HEIGHT));
    }

    private void setupMenu() {
        JMenuBar menu = new JMenuBar();
        JMenu file = new JMenu("File");
        JMenu help = new JMenu("Help");

        JMenuItem fileItem1 = new JMenuItem("Open");
        file.add(fileItem1);

        JMenuItem helpItem1 = new JMenuItem("Save as");
        help.add(helpItem1);

        gui.getContentPane().add(BorderLayout.NORTH, menu);
        System.err.println("Setup Menu...");
    }

    private void setupPanel() {
        System.err.println("Setup tabs...");
        JTabbedPane panel = new JTabbedPane();
        JButton quit = new JButton("quit");
        quit.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                System.exit(0);
            }
        });

        JPanel connPanel = new JPanel(new BorderLayout());
        connPanel.add(new ConnectPanel(), BorderLayout.CENTER);
        connPanel.add(quit, BorderLayout.PAGE_END);
        connPanel.setBorder(BorderFactory.createEmptyBorder(10,10,10,10));
        panel.addTab(CONNPANEL, connPanel);


        JPanel showPanel = new JPanel(new BorderLayout());
        showPanel.add(new ShowPanel(), BorderLayout.CENTER);
        panel.addTab(SHOWPANEL, showPanel);

        JPanel infoPanel = new JPanel(new BorderLayout());
        infoPanel.add(new InfoPanel(), BorderLayout.CENTER);
        panel.addTab(INFOPANEL, infoPanel);

        gui.getContentPane().add(panel, BorderLayout.CENTER);
    }

}
